"use strict";!function(){window.VueKeyboard=Vue.component("keyboard",{template:'<div class="keyboard"><div v-for="row in renderChars()"><button v-for="btn in row" :class="btn.class" @click="btn.action">{{ btn.value }}</button></div></div>',props:{chars:{type:String,required:!0},maxlength:{type:Number,"default":0}},data:function(){return{value:""}},methods:{renderChars:function(){var t=this,e=this.chars.split("|");return e.map(function(e){var n=e.split(""),i=[],a=null;return n.forEach(function(e){if("{"===e)a="";else if("}"===e){var n=a.split(":"),s=n.length>1?n[0]:"",u=n.length>1?n[1]:n[0],l=null;l=t.hasOwnProperty(u)?t[u].bind(t):t.$emit.bind(t,u,t),i.push({"class":"action-"+u.replace(/\s+/g,"-").toLowerCase(),action:l,value:s}),a=null}else null!==a?a+=e:i.push({"class":"char-"+e,action:t.append.bind(t,e),value:e})}),i})},mutate:function(t){this.value=t,this.maxlength>0&&(this.value=this.value.slice(0,this.maxlength)),this.$emit("input",this.value)},append:function(t){this.mutate(this.value+t),this.$emit("append",t)},backspace:function(){this.mutate(this.value.slice(0,this.value.length-1))},space:function(){this.append(" ")},clear:function(){this.mutate("")}}})}();